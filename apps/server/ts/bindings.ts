/* eslint-disable */
// THIS FILE HAS BEEN AUTO GENERATED BY THE SERVER VIA RSPC
// This file was generated by [rspc](https://github.com/oscartbeaumont/rspc). Do not edit this file manually.
export type Procedures = { queries: { key: "chess.start"; input: never; result: ChessJSON; error: Error } | { key: "echo"; input: string; result: string; error: Error }; mutations: { key: "chess.move"; input: [MoveJSON, ChessJSON]; result: ChessJSON; error: Error }; subscriptions: never }

/**
 * What is the status of this game?
 */
export type BoardStatus = "Ongoing" | "Stalemate" | "Checkmate"

export type ChessBoard = (ChessPiece | null)[]

export type ChessJSON = { teamToMove: Team; moves: MoveJSON[]; board: ChessBoard; status: BoardStatus }

export type ChessPiece = { team: Team; variant: Piece }

/**
 * Router error
 */
export type Error = string

export type MoveJSON = { origin: string; destination: string; takes: boolean; piece: Piece; promotion: Piece | null }

export type Piece = "Pawn" | "Knight" | "Bishop" | "Rook" | "Queen" | "King"

export type Team = "White" | "Black"
